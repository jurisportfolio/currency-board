{"version":3,"sources":["components/ExRateComponent/ExRateDisplay.js","utilities/actions.js","components/ExRateComponent/ExRateSetter.js","utilities/fetchRate.js","components/ExRateComponent/ExRateFetcher.js","components/ExRateComponent/ExRateComponent.js","utilities/uuidGenerator.js","utilities/currencyFormat.js","components/NewTransactionComponent/NewTransactionComponent.js","components/TransactionsDisplayComponent/TransactionsDisplayComponent.js","components/TransactionsDisplayComponent/BiggestTransDisplayComponent.js","components/TransSumComponent/TransSumComponent.js","components/DashboardComponent.js","App.js","serviceWorker.js","utilities/reducers.js","index.js"],"names":["connect","state","exRate","SET_RATE","ADD_TRANSACTION","REMOVE_TRANSACTION","FETCH_RATE_SUCCESS","setRate","type","dispatchForExRateSetter","rateInput","React","createRef","onSubmit","event","preventDefault","parseFloat","current","value","name","step","max","min","defaultValue","ref","className","fetchRate","dispatch","fetch","then","res","ok","alert","json","code","rates","mid","catch","ExRateFetcher","handelOnClick","props","onClick","this","Component","transactions","childrenStyle","css","StyledSetter","styled","div","StyledExRateComponent","ExRateComponent","rateInputValue","onChangeInputValue","setState","target","uiKey","uuid","v4","currencyFormat","num","cur","toFixed","replace","StyledNewTransactionComponent","NewTransactionComponent","newTransactionName","newTransactionAmountEUR","onNewTransactionNameChange","onNewTransactionAmountChange","onSubmitTransaction","transactionUID","transaction","uid","amountEUR","amountPLN","addTransaction","displayedName","displayedAmountEUR","onChange","dispatchForNewTransaction","ulChildren","StyledTransactionsDisplayComponent","ul","dispatchForTransactionsDisplay","removeTransaction","transactionsList","map","key","id","children","StyledBiggestTrans","getBiggestTrans","createSelector","biggest","transactionToReturn","reduce","biggestTransaction","StyledTransSumComponent","getTransactions","getSumEUR","sum","getSumPLN","sumEUR","sumPLN","StyledDashboard","StyledTransactionPanel","DashboardComponent","App","Boolean","window","location","hostname","match","initialExRate","initialTransactions","cantorApp","combineReducers","action","filter","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uTAiBeA,eANkB,SAAAC,GAC/B,MAAO,CACLC,OAAQD,EAAMC,UAIHF,EAdO,SAAC,GAAD,IAAGE,EAAH,EAAGA,OAAH,OACpB,6BACE,wCACA,oCACA,+BAAQA,EAAR,YCPSC,EAAW,WACXC,EAAkB,kBAElBC,EAAqB,qBAGrBC,EAAqB,qBAmBrBC,EAAU,SAAAL,GAAM,MAAK,CACjCM,KAAML,EACND,WCaKO,EAA0B,CAAEF,WAEnBP,eARc,SAAAC,GAC5B,MAAO,CACNC,OAAQD,EAAMC,UAQfO,EAFcT,EArCM,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,OAAQK,EAAc,EAAdA,QAC3BG,EAAYC,IAAMC,YAOtB,OACC,6BACC,0BAAMC,SAPa,SAAAC,GACpBA,EAAMC,iBACNR,EAAQS,WAAWN,EAAUO,QAAQC,UAMnC,uCAEC,2BACCV,KAAK,SACLW,KAAK,OACLC,KAAK,SACLC,IAAI,SACJC,IAAI,SACJC,aAAcrB,EACdsB,IAAKd,KAGP,2BAAOe,UAAU,gBAAgBjB,KAAK,SAASU,MAAM,kBCnB5CQ,EAAY,WACxB,OAAO,SAAAC,GAEN,OADAA,EFmBmC,CACpCnB,KA1B+B,qBEOvBoB,MALS,+DAMdC,MAAK,SAAAC,GAAG,OAAMA,EAAIC,GAAsCD,EAAjCE,MAAM,sCAC7BH,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAChBJ,MAAK,SAAAI,GACa,QAAdA,EAAKC,KACRP,EAASpB,EAAQ0B,EAAKE,MAAM,GAAGC,MAE/BT,GAAgCM,EAAKC,KFoBa,CACtD1B,KAjCwC,kCEerC6B,OACA,kBAAML,MAAM,wCCjBVM,E,2MACLC,cAAgB,WACf,EAAKC,MAAMb,SAASD,M,wEAIpB,OACC,6BACC,oDACA,2BAAOD,UAAU,gBAAgBjB,KAAK,SAASU,MAAM,UAAUuB,QAASC,KAAKH,qB,GATrD5B,IAAMgC,WAwBnB3C,eATe,SAAAC,GAC7B,MAAO,CACN2C,aAAc3C,EAAM2C,aACpB1C,OAAQD,EAAMC,UAMDF,CAGXsC,G,wgBC1BJ,IAAMO,EAAgBC,YAAH,KASbC,EAAeC,IAAOC,IAAV,IAIfJ,GAGGK,EAAwBF,IAAOC,IAAV,KAWNE,E,2MACpBlD,MAAQ,CAAEmD,eAAgB,U,EAE1BC,mBAAqB,SAAAvC,GACpB,EAAKwC,SAAS,CACbF,eAAgBtC,EAAMyC,OAAOrC,S,wEAK9B,OACC,kBAACgC,EAAD,KACC,kBAAC,EAAD,MACA,kBAACH,EAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAfwCpC,IAAMgC,W,iBC5BpCa,EAJD,WACZ,OAAOC,IAAKC,MCHDC,EAAiB,SAACC,EAAKC,GAYnC,OAXAD,EAAMA,EACJE,QAAQ,GACRC,QAAQ,IAAK,KACbA,QAAQ,0BAA2B,OAC1B,OAAPF,IACHD,EAAM,UAAOA,GAEH,OAAPC,IACHD,GAAY,YAGNA,G,6XCJR,IAAMf,EAAgBC,YAAH,KAWbkB,EAAgChB,IAAOC,IAAV,IAKhCJ,GAGGoB,E,2MACLhE,MAAQ,CACPiE,mBAAoB,kBACpBC,wBAAyB,K,EAG1BC,2BAA6B,SAAAtD,GAC5B,EAAKwC,SAAS,CACbY,mBAAoBpD,EAAMyC,OAAOrC,S,EAInCmD,6BAA+B,SAAAvD,GAC9B,EAAKwC,SAAS,CACba,wBAAyBnD,WAAWF,EAAMyC,OAAOrC,U,EAInDoD,oBAAsB,SAAAxD,GACrBA,EAAMC,iBACN,IAAMwD,EAAiBf,IACjBU,EAAqB,EAAKjE,MAAMiE,mBAChCC,EAA0BnD,WAC/B,EAAKf,MAAMkE,yBAGNK,EAAc,CACnBC,IAAKF,EACLpD,KAAM+C,EACNQ,UAAWP,EACXQ,UAL2BR,EAA0B,EAAK3B,MAAMtC,QAOjE,EAAKsC,MAAMoC,eAAeJ,I,wEAGjB,IAAD,EACgD9B,KAAKzC,MAArDkE,EADA,EACAA,wBAAyBD,EADzB,EACyBA,mBAC7BW,EAAgBX,GAA0C,YAC1DY,EAAqBX,GAEtB,EAEH,OADAW,EAAqBnB,EAAemB,EAAoB,OAEvD,kBAACd,EAAD,KACC,6BACC,+BAAQa,GACR,+BAAQC,IAET,6BACC,0BAAMjE,SAAU6B,KAAK4B,qBACpB,wCACA,2BACC9D,KAAK,OACLW,KAAK,qBACLD,MAAOgD,EACPa,SAAUrC,KAAK0B,6BAEhB,6BACA,wCACA,2BACC5D,KAAK,SACLY,KAAK,OACLC,IAAI,SACJC,IAAI,OACJH,KAAK,0BACLD,MAAOiD,EACPY,SAAUrC,KAAK2B,+BAEhB,2BAAO5C,UAAU,gBAAgBjB,KAAK,SAASU,MAAM,iB,GApErBP,IAAMgC,WAkFtCqC,EAA4B,CAAEJ,ePnGN,SAAAJ,GAAW,MAAK,CAC7ChE,KAAMJ,EACNoE,iBOmGcxE,eARgB,SAAAC,GAC9B,MAAO,CACNC,OAAQD,EAAMC,UAQf8E,EAFchF,CAGbiE,G,ubC3GF,IAAMgB,EAAanC,YAAH,KAgBVoC,EAAqClC,IAAOmC,GAAV,IAQrCF,GAmCGG,EAAiC,CAAEC,kBRnDR,SAAAZ,GAAG,MAAK,CACxCjE,KAAMH,EACNoE,SQmDczE,eARqB,SAAAC,GACnC,MAAO,CACNqF,iBAAkBrF,EAAM2C,gBAQzBwC,EAFcpF,EAlCsB,SAAC,GAG/B,IAFNsF,EAEK,EAFLA,iBACAD,EACK,EADLA,kBAEA,OACC,kBAACH,EAAD,KACEI,EAAiBC,KAAI,YAA0C,IAAvCd,EAAsC,EAAtCA,IAAKtD,EAAiC,EAAjCA,KAAMwD,EAA2B,EAA3BA,UAAWD,EAAgB,EAAhBA,UAK9C,OAJAC,EAAYhB,EAAegB,EAAW,OACtCD,EAAYf,EAAee,EAAW,OAIrC,wBAAIc,IAAKf,GACR,yCAAetD,GACf,6BACA,+BACEuD,EADF,MACgBC,GAEhB,4BAAQlC,QAAS,SAAAgD,GAAE,OAAIJ,EAAkBZ,KAAzC,mB,6RC9CN,IAAMiB,EAAW5C,YAAH,KAOR6C,GAAqB3C,IAAOC,IAAV,IAIrByC,GAuBGE,GAAkBC,YACvB,CAHuB,SAAA5F,GAAK,OAAIA,EAAM2C,gBAItC,SAAAA,GACC,IAAIkD,EAAU,CACbnB,UAAW,EACXoB,oBAAqB,CACpB5E,KAAM,iBACNuD,UAAW,EACXC,UAAW,IAYb,OARAmB,EAAUlD,EAAaoD,QAAO,SAACF,EAAStB,GACvC,OAAOsB,EAAQnB,UAAYH,EAAYG,UACpCmB,EACA,CACAnB,UAAWH,EAAYG,UACvBoB,oBAAqBvB,KAEtBsB,IACYC,uBAUF/F,gBANuB,SAAAC,GACrC,MAAO,CACNgG,mBAAoBL,GAAgB3F,MAIvBD,EAlDe,SAAC,GAA4B,IAA1BiG,EAAyB,EAAzBA,mBAC1B9E,EAA+B8E,EAA/B9E,KAAMwD,EAAyBsB,EAAzBtB,UAAWD,EAAcuB,EAAdvB,UAKvB,OAJAA,EAAYf,EAAee,EAAW,OACtCC,EAAYhB,EAAegB,EAAW,OAIrC,kBAACgB,GAAD,KACC,+CACA,+BAAQxE,GACR,6BACA,+BAAQwD,GACR,6BACA,+BAAQD,O,8QC3BX,IAAM7B,GAAgBC,YAAH,MASboD,GAA0BlD,IAAOC,IAAV,KAG1BJ,IAeGsD,GAAkB,SAAAlG,GAAK,OAAIA,EAAM2C,cAEjCwD,GAAYP,YACjB,CAACM,KACD,SAAAvD,GAAY,OACXA,EAAaoD,QACZ,SAACK,EAAK7B,GAAN,OAAsB6B,EAAM7B,EAAYE,YAKxC,MAIG4B,GAAYT,YACjB,CAACM,KACD,SAAAvD,GAAY,OACXA,EAAaoD,QACZ,SAACK,EAAK7B,GAAN,OAAsB6B,EAAM7B,EAAYG,YAKxC,MAWY3E,gBAPS,SAAAC,GACvB,MAAO,CACNsG,OAAQH,GAAUnG,GAClBuG,OAAQF,GAAUrG,MAILD,EA/CW,SAAC,GAAwB,IAAtBuG,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAGpC,OAFAD,EAAS5C,EAAe4C,EAAQ,OAChCC,EAAS7C,EAAe6C,EAAQ,OAE/B,kBAACN,GAAD,KACC,yCACA,6BACA,+BAAQK,GAHT,IAGyB,+BAAQC,O,kQClBnC,IAAMC,GAAkBzD,IAAOC,IAAV,MAKfyD,GAAyB1D,IAAOC,IAAV,MAMtB0D,G,iLAEJ,OACC,kBAACF,GAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAACC,GAAD,KACC,kBAAC,EAAD,MACA,kBAAC,GAAD,OAGD,kBAAC,GAAD,W,GAZ6B/F,IAAMgC,WAkBxB3C,iBAAU2G,ICrBVC,OAbf,WACC,OACC,yBAAKnF,UAAU,OACd,4BAAQA,UAAU,cACjB,kDAED,8BACC,kBAAC,GAAD,SCAgBoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8PCZN,IAAMC,GAAgB,SAGhBC,GAAsB,CAC3B,CACC1C,IAHqBjB,IAIrBrC,KAAM,eACNwD,UAAW,MACXD,UAAW,QAqCb,IAKe0C,GALGC,aAAgB,CACjCnH,OAlCD,WAAgD,IAAhCD,EAA+B,uDAAvBiH,GAAeI,EAAQ,uCAC9C,OAAQA,EAAO9G,MACd,KAAKL,EAGL,KAAKG,EACJ,OAAOgH,EAAOpH,OAEf,QACC,OAAOD,IA0BT2C,aAtBD,WAA4D,IAAtC3C,EAAqC,uDAA7BkH,GAAqBG,EAAQ,uCAC1D,OAAQA,EAAO9G,MACd,KAAKJ,EACJ,MAAM,GAAN,oBAAWH,GAAX,CAAkBqH,EAAO9C,cAE1B,KAAKnE,EACH,OAAOJ,EAAMsH,QAAO,SAAA/C,GAAW,OAC/BA,EAAYC,MAAQ6C,EAAO7C,IAAMD,EAAc,QAEjD,KAAKrE,EACJ,OAAOF,EAAMsF,KACX,SAAAf,GACA,O,4VAAO,CAAP,GAAWA,EAAX,CAAwBG,UAAWH,EAAYE,UAAY4C,EAAOpH,YAGrE,QACC,OAAOD,M,SC7BJuH,GAAiB,CACrBtH,OAAQ,SACR0C,aAL0B,CAAC,CAAC6B,IADPjB,IAC4BrC,KAAM,mBAAoBwD,UAAW,IAAKD,UAAW,OAQlG+C,GAAmBX,OAAOY,sCAAwCC,KAClEC,GAAQC,aACZT,GACAI,GACAC,GAAiBK,aAAgBC,QAGnCH,GAAMjG,SAASD,KAEfsG,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAEFM,SAASC,eAAe,SF6FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzG,MAAK,SAAA0G,GACjCA,EAAaC,kB","file":"static/js/main.6dc88b15.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ExRateDisplay = ({ exRate }) => (\n  <div>\n    <label>1 EUR</label>\n    <label>=</label>\n    <label>{exRate} PLN</label>\n  </div>\n);\n\nconst propsMapForExRateDisplay = state => {\n  return {\n    exRate: state.exRate\n  }\n};\n\nexport default connect(propsMapForExRateDisplay)(ExRateDisplay);\n\n\n","export const SET_RATE = \"SET_RATE\";\nexport const ADD_TRANSACTION = \"ADD_TRANSACTION\";\nexport const SET_NEW_AMOUNT = \"SET_NEW_AMOUNT\";\nexport const REMOVE_TRANSACTION = \"REMOVE_TRANSACTION\";\n\nexport const FETCH_RATE_BEGIN = \"FETCH_RATE_BEGIN\";\nexport const FETCH_RATE_SUCCESS = \"FETCH_RATE_SUCCESS\";\nexport const FETCH_RATE_CURRENCY_ERROR = \"FETCH_RATE_CURRENCY_ERROR\";\nexport const FETCH_RATE_FAILURE = \"FETCH_RATE_FAILURE\";\n\nexport const addTransaction = transaction => ({\n\ttype: ADD_TRANSACTION,\n\ttransaction\n});\n\nexport const removeTransaction = uid => ({\n\ttype: REMOVE_TRANSACTION,\n\tuid\n});\n\nexport const setNewAmount = amount => ({\n\ttype: SET_NEW_AMOUNT,\n\tamount\n});\n\nexport const setRate = exRate => ({\n\ttype: SET_RATE,\n\texRate\n});\n\nexport const fetchRateBegin = () => ({\n\ttype: FETCH_RATE_BEGIN\n});\n\nexport const fetchRateSuccess = exRate => ({\n\ttype: FETCH_RATE_SUCCESS,\n\texRate\n});\n\nexport const fetchRateCurrencyError = currencyCode => ({\n\ttype: FETCH_RATE_CURRENCY_ERROR\n});\n\nexport const fetchRateFailure = error => ({\n\ttype: FETCH_RATE_FAILURE\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setRate } from \"../../utilities/actions\";\n\nconst ExRateSetter = ({ exRate, setRate }) => {\n\tlet rateInput = React.createRef();\n\n\tconst handelSubmit = event => {\n\t\tevent.preventDefault();\n\t\tsetRate(parseFloat(rateInput.current.value));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handelSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tRate:\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"rate\"\n\t\t\t\t\t\tstep=\"0.0001\"\n\t\t\t\t\t\tmax=\"999999\"\n\t\t\t\t\t\tmin=\"0.0001\"\n\t\t\t\t\t\tdefaultValue={exRate}\n\t\t\t\t\t\tref={rateInput}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<input className=\"submit-button\" type=\"submit\" value=\"Set rate\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst propsForExRateSetter = state => {\n\treturn {\n\t\texRate: state.exRate\n\t};\n};\n\nconst dispatchForExRateSetter = { setRate };\n\nexport default connect(\n\tpropsForExRateSetter,\n\tdispatchForExRateSetter\n)(ExRateSetter);\n","import {\n\tfetchRateBegin,\n\tsetRate,\n\tfetchRateCurrencyError,\n\tfetchRateFailure\n} from \"./actions\";\n\nconst NBP_QUERY = \"http://api.nbp.pl/api/exchangerates/rates/a/eur?format=json\";\n\nexport const fetchRate = () => {\n\treturn dispatch => {\n\t\tdispatch(fetchRateBegin());\n\t\treturn fetch(NBP_QUERY)\n\t\t\t.then(res => (!res.ok ? alert(\"Brak połączenia z NBP\") : res))\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tif (json.code === \"EUR\") {\n\t\t\t\t\tdispatch(setRate(json.rates[0].mid));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(fetchRateCurrencyError(json.code));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\t() => alert(\"Brak połączenia z NBP\")\n\t\t\t\t// dispatch(fetchRateFailure(error))\n\t\t\t);\n\t};\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchRate } from '../../utilities/fetchRate';\n\n\nclass ExRateFetcher extends React.Component {\n\thandelOnClick = () => {\n\t\tthis.props.dispatch(fetchRate());\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<label>Aktualny kurs NBP</label>\n\t\t\t\t<input className=\"submit-button\" type=\"button\" value=\"Pobierz\" onClick={this.handelOnClick} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst propsForExRateFetcher = state => {\n\treturn {\n\t\ttransactions: state.transactions,\n\t\texRate: state.exRate\n\t};\n};\n\n// const dispatchForExRateFetcher = { setNewAmountPLN };\n\nexport default connect(\n\tpropsForExRateFetcher\n\t// , dispatchForExRateFetcher\n  )(ExRateFetcher);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport ExRateDisplay from \"./ExRateDisplay\";\nimport ExRateSetter from \"./ExRateSetter\";\nimport ExRateFetcher from \"./ExRateFetcher\";\n\nconst childrenStyle = css`\n\tlabel {\n\t\tpadding: 5px;\n\t}\n\t> div {\n\t\tpadding: 10px 5px;\n\t}\n`;\n\nconst StyledSetter = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\t${childrenStyle}\n`;\n\nconst StyledExRateComponent = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tborder-bottom: solid 2px white;\n\n\twidth: 100%;\n\tpadding: 5px 0 15px 0;\n\tmargin-bottom: 5px;\n`;\n\nexport default class ExRateComponent extends React.Component {\n\tstate = { rateInputValue: \"0.0000\" };\n\n\tonChangeInputValue = event => {\n\t\tthis.setState({\n\t\t\trateInputValue: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<StyledExRateComponent>\n\t\t\t\t<ExRateDisplay />\n\t\t\t\t<StyledSetter>\n\t\t\t\t\t<ExRateSetter />\n\t\t\t\t\t<ExRateFetcher />\n\t\t\t\t</StyledSetter>\n\t\t\t</StyledExRateComponent>\n\t\t);\n\t}\n}\n","import uuid from \"uuid\";\n\nconst uiKey = () => {\n  return uuid.v4()\n}\n\nexport default uiKey;","export const currencyFormat = (num, cur) => {\n\tnum = num\n\t\t.toFixed(2)\n\t\t.replace(\".\", \",\")\n\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n\tif (cur == \"EUR\") {\n\t\tnum = \"€ \" + num;\n\t}\n\tif (cur == \"PLN\") {\n\t\tnum = num + \" Zł\";\n\t}\n\n\treturn num;\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport { addTransaction } from \"../../utilities/actions\";\nimport uiKey from \"../../utilities/uuidGenerator\";\nimport { currencyFormat } from \"../../utilities/currencyFormat\";\n\nconst childrenStyle = css`\n\t* {\n\t\tmargin: 5px;\n\t}\n\t/* .submit-button {\n\t\tbackground-color: green;\n\t\tcolor: white;\n\t\tfont-size: 16px;\n\t} */\n`;\n\nconst StyledNewTransactionComponent = styled.div`\n\tborder-bottom: solid 2px white;\n\twidth: 100%;\n\tpadding: 5px 0 15px 0;\n\tmargin-bottom: 5px;\n\t${childrenStyle}\n`;\n\nclass NewTransactionComponent extends React.Component {\n\tstate = {\n\t\tnewTransactionName: \"New Transaction\",\n\t\tnewTransactionAmountEUR: 450.0\n\t};\n\n\tonNewTransactionNameChange = event => {\n\t\tthis.setState({\n\t\t\tnewTransactionName: event.target.value\n\t\t});\n\t};\n\n\tonNewTransactionAmountChange = event => {\n\t\tthis.setState({\n\t\t\tnewTransactionAmountEUR: parseFloat(event.target.value)\n\t\t});\n\t};\n\n\tonSubmitTransaction = event => {\n\t\tevent.preventDefault();\n\t\tconst transactionUID = uiKey();\n\t\tconst newTransactionName = this.state.newTransactionName;\n\t\tconst newTransactionAmountEUR = parseFloat(\n\t\t\tthis.state.newTransactionAmountEUR\n\t\t);\n\t\tconst calculatedAmountPLN = newTransactionAmountEUR * this.props.exRate;\n\t\tconst transaction = {\n\t\t\tuid: transactionUID,\n\t\t\tname: newTransactionName,\n\t\t\tamountEUR: newTransactionAmountEUR,\n\t\t\tamountPLN: calculatedAmountPLN\n\t\t};\n\t\tthis.props.addTransaction(transaction);\n\t};\n\n\trender() {\n\t\tconst { newTransactionAmountEUR, newTransactionName } = this.state;\n\t\tlet displayedName = newTransactionName ? newTransactionName : \"Bez nazwy\";\n\t\tlet displayedAmountEUR = newTransactionAmountEUR\n\t\t\t? newTransactionAmountEUR\n\t\t\t: 0;\n\t\tdisplayedAmountEUR = currencyFormat(displayedAmountEUR, \"EUR\");\n\t\treturn (\n\t\t\t<StyledNewTransactionComponent>\n\t\t\t\t<div>\n\t\t\t\t\t<label>{displayedName}</label>\n\t\t\t\t\t<label>{displayedAmountEUR}</label>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<form onSubmit={this.onSubmitTransaction}>\n\t\t\t\t\t\t<label>Nazwa</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"newTransactionName\"\n\t\t\t\t\t\t\tvalue={newTransactionName}\n\t\t\t\t\t\t\tonChange={this.onNewTransactionNameChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>Kwota</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\t\tmax=\"999999\"\n\t\t\t\t\t\t\tmin=\"0.01\"\n\t\t\t\t\t\t\tname=\"newTransactionAmountEUR\"\n\t\t\t\t\t\t\tvalue={newTransactionAmountEUR}\n\t\t\t\t\t\t\tonChange={this.onNewTransactionAmountChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input className=\"submit-button\" type=\"submit\" value=\"dodaj\" />\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</StyledNewTransactionComponent>\n\t\t);\n\t}\n}\n\nconst propsForNewTransaction = state => {\n\treturn {\n\t\texRate: state.exRate\n\t};\n};\n\nconst dispatchForNewTransaction = { addTransaction };\n\nexport default connect(\n\tpropsForNewTransaction,\n\tdispatchForNewTransaction\n)(NewTransactionComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\n\nimport { removeTransaction } from \"../../utilities/actions\";\nimport { currencyFormat } from \"../../utilities/currencyFormat\";\n\nconst ulChildren = css`\n\tli {\n\t\tpadding: 10px 0;\n\t}\n\n\tli > label {\n\t\tmargin: 0 10px;\n\t}\n\n\tli > button {\n\t\tfont-size: 16px;\n\t\tbackground-color: red;\n\t\tcolor: white;\n\t}\n`;\n\nconst StyledTransactionsDisplayComponent = styled.ul`\n\twidth: 100%;\n\tpadding: 5px 0 15px 0;\n\tmargin-bottom: 5px 0;\n\tmargin-block-start: 0;\n\n\tlist-style: none;\n\n\t${ulChildren}\n`;\n\nconst TransactionsDisplayComponent = ({\n\ttransactionsList,\n\tremoveTransaction\n}) => {\n\treturn (\n\t\t<StyledTransactionsDisplayComponent>\n\t\t\t{transactionsList.map(({ uid, name, amountPLN, amountEUR }) => {\n\t\t\t\tamountPLN = currencyFormat(amountPLN, \"PLN\");\n\t\t\t\tamountEUR = currencyFormat(amountEUR, \"EUR\");\n\t\t\t\t// amountPLN = amountPLN.toFixed(2).toString();\n\t\t\t\t// amountEUR = amountEUR.toFixed(2).toString();\n\t\t\t\treturn (\n\t\t\t\t\t<li key={uid}>\n\t\t\t\t\t\t<label>Nazwa: {name}</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t{amountEUR} = {amountPLN}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<button onClick={id => removeTransaction(uid)}>wykasuj</button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</StyledTransactionsDisplayComponent>\n\t);\n};\n\nconst propsForTransactionsDisplay = state => {\n\treturn {\n\t\ttransactionsList: state.transactions\n\t};\n};\n\nconst dispatchForTransactionsDisplay = { removeTransaction };\n\nexport default connect(\n\tpropsForTransactionsDisplay,\n\tdispatchForTransactionsDisplay\n)(TransactionsDisplayComponent);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { currencyFormat } from \"../../utilities/currencyFormat\";\n\nconst children = css`\n\th5 {\n\t\tmargin-block-start: 0.8em;\n\t\tmargin-block-end: 0.8em;\n\t}\n`;\n\nconst StyledBiggestTrans = styled.div`\n\tcolor: red;\n\tmargin: 10px 0;\n\tpadding: 0 5px;\n\t${children}\n`;\n\nconst BiggestTransComponent = ({ biggestTransaction }) => {\n\tlet { name, amountPLN, amountEUR } = biggestTransaction;\n\tamountEUR = currencyFormat(amountEUR, \"EUR\");\n\tamountPLN = currencyFormat(amountPLN, \"PLN\");\n\t// amountPLN = amountPLN.toFixed(2).toString() + \" Zł\";\n\t// amountEUR = \"€ \" + amountEUR.toFixed(2).toString();\n\treturn (\n\t\t<StyledBiggestTrans>\n\t\t\t<h5>Największa</h5>\n\t\t\t<label>{name}</label>\n\t\t\t<br />\n\t\t\t<label>{amountPLN}</label>\n\t\t\t<br />\n\t\t\t<label>{amountEUR}</label>\n\t\t</StyledBiggestTrans>\n\t);\n};\n\nconst getTransactions = state => state.transactions;\n\nconst getBiggestTrans = createSelector(\n\t[getTransactions],\n\ttransactions => {\n\t\tlet biggest = {\n\t\t\tamountPLN: 0,\n\t\t\ttransactionToReturn: {\n\t\t\t\tname: \"Brak transacji\",\n\t\t\t\tamountEUR: 0,\n\t\t\t\tamountPLN: 0\n\t\t\t}\n\t\t};\n\n\t\tbiggest = transactions.reduce((biggest, transaction) => {\n\t\t\treturn biggest.amountPLN > transaction.amountPLN\n\t\t\t\t? biggest\n\t\t\t\t: {\n\t\t\t\t\t\tamountPLN: transaction.amountPLN,\n\t\t\t\t\t\ttransactionToReturn: transaction\n\t\t\t\t  };\n\t\t}, biggest);\n\t\treturn biggest.transactionToReturn;\n\t}\n);\n\nconst propsForBiggestTransComponent = state => {\n\treturn {\n\t\tbiggestTransaction: getBiggestTrans(state)\n\t};\n};\n\nexport default connect(propsForBiggestTransComponent)(BiggestTransComponent);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { currencyFormat } from \"../../utilities/currencyFormat\";\n\nconst childrenStyle = css`\n\tlabel {\n\t\tpadding: 5px;\n\t}\n\t> div {\n\t\tpadding: 10px 5px;\n\t}\n`;\n\nconst StyledTransSumComponent = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${childrenStyle}\n`;\n\nconst TransSumComponent = ({ sumEUR, sumPLN }) => {\n\tsumEUR = currencyFormat(sumEUR, \"EUR\");\n\tsumPLN = currencyFormat(sumPLN, \"PLN\");\n\treturn (\n\t\t<StyledTransSumComponent>\n\t\t\t<label>Suma: </label>\n\t\t\t<br />\n\t\t\t<label>{sumEUR}</label> <label>{sumPLN}</label>\n\t\t</StyledTransSumComponent>\n\t);\n};\n\nconst getTransactions = state => state.transactions;\n\nconst getSumEUR = createSelector(\n\t[getTransactions],\n\ttransactions =>\n\t\ttransactions.reduce(\n\t\t\t(sum, transaction) => sum + transaction.amountEUR,\n\t\t\t// {\n\t\t\t// \tlet newSum = parseFloat(sum) + parseFloat(transaction.amountEUR);\n\t\t\t// \treturn newSum.toFixed(2);\n\t\t\t// }\n\t\t\t0\n\t\t)\n);\n\nconst getSumPLN = createSelector(\n\t[getTransactions],\n\ttransactions =>\n\t\ttransactions.reduce(\n\t\t\t(sum, transaction) => sum + transaction.amountPLN,\n\t\t\t// {\n\t\t\t// \tlet newSum = parseFloat(sum) + parseFloat(transaction.amountPLN);\n\t\t\t// \treturn newSum.toFixed(2);\n\t\t\t// }\n\t\t\t0\n\t\t)\n);\n\nconst propsToTransSum = state => {\n\treturn {\n\t\tsumEUR: getSumEUR(state),\n\t\tsumPLN: getSumPLN(state)\n\t};\n};\n\nexport default connect(propsToTransSum)(TransSumComponent);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport ExRateComponent from \"./ExRateComponent/ExRateComponent\";\nimport NewTransactionComponent from \"./NewTransactionComponent/NewTransactionComponent\";\nimport TransactionsDisplayComponent from \"./TransactionsDisplayComponent/TransactionsDisplayComponent\";\nimport BiggestTransComponent from \"./TransactionsDisplayComponent/BiggestTransDisplayComponent\";\nimport TransSumComponent from \"./TransSumComponent/TransSumComponent\";\n\nconst StyledDashboard = styled.div`\n\tmargin: 10px;\n\tpadding: 10px;\n`;\n\nconst StyledTransactionPanel = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tborder-bottom: solid 2px white;\n`;\n\nclass DashboardComponent extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<StyledDashboard>\n\t\t\t\t<ExRateComponent />\n\t\t\t\t<NewTransactionComponent />\n\n\t\t\t\t<StyledTransactionPanel>\n\t\t\t\t\t<TransactionsDisplayComponent />\n\t\t\t\t\t<BiggestTransComponent />\n\t\t\t\t</StyledTransactionPanel>\n\n\t\t\t\t<TransSumComponent />\n\t\t\t</StyledDashboard>\n\t\t);\n\t}\n}\n\nexport default connect()(DashboardComponent);\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Dashboard from \"./components/DashboardComponent\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h3>Currency Exchange</h3>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Dashboard />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { SET_RATE, FETCH_RATE_SUCCESS } from \"./actions\";\nimport { ADD_TRANSACTION, SET_NEW_AMOUNT, REMOVE_TRANSACTION } from \"./actions\";\n\nimport uiKey from \"./uuidGenerator\";\n\nconst initialExRate = \"0.0000\";\n\nconst transactionUID = uiKey();\nconst initialTransactions = [\n\t{\n\t\tuid: transactionUID,\n\t\tname: \"form reducer\",\n\t\tamountPLN: \"666\",\n\t\tamountEUR: \"777\"\n\t}\n];\n\nfunction exRate(state = initialExRate, action) {\n\tswitch (action.type) {\n\t\tcase SET_RATE:\n\t\t\treturn action.exRate;\n\n\t\tcase FETCH_RATE_SUCCESS:\n\t\t\treturn action.exRate;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction transactions(state = initialTransactions, action) {\n\tswitch (action.type) {\n\t\tcase ADD_TRANSACTION:\n\t\t\treturn [...state, action.transaction];\n\n\t\tcase REMOVE_TRANSACTION:\n\t\t\t\treturn state.filter(transaction =>\n\t\t\t\ttransaction.uid !== action.uid ? transaction : null\n\t\t\t);\n\t\tcase SET_RATE:\n\t\t\treturn state.map(\n\t\t\t\t(transaction => {\n\t\t\t\t\treturn {...transaction, amountPLN: transaction.amountEUR * action.exRate}\n\t\t\t\t})\n\t\t\t);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst cantorApp = combineReducers({\n\texRate,\n\ttransactions\n});\n\nexport default cantorApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport cantorApp from './utilities/reducers';\nimport thunk from 'redux-thunk';\n\nimport { fetchRate } from './utilities/fetchRate';\n\nimport uiKey from './utilities/uuidGenerator';\n\nconst transactionUID = uiKey();\nconst initialTransactions = [{uid: transactionUID, name: \"from createStore\", amountPLN: 666, amountEUR: 777}]\n\n\nconst preloadedState = {\n  exRate: \"1.0000\",\n  transactions: initialTransactions\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  cantorApp,\n  preloadedState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.dispatch(fetchRate());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')  \n);\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}